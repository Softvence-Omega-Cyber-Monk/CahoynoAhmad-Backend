model GameData {
  id            String       @id @default(uuid())
  arabicText    String?
  englishText   String?
  audioUrl      String?
  correct       String
  options       String[]
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  surahId       Int?
  ayahId        Int?
  correctArabic String
  optionsArabic String[]
  ayah          Ayah?        @relation(fields: [ayahId], references: [id])
  surah         Surah?       @relation(fields: [surahId], references: [id])
  userAnswers   UserAnswer[]
}

model UserGameProgress {
  id        String     @id @default(uuid())
  userId    String
  surahId   Int
  completed Boolean    @default(false)
  score     Int?
  playedAt  DateTime   @default(now())
  user      Credential @relation(fields: [userId], references: [id])
}

model UserAnswer {
  id         String     @id @default(uuid())
  userId     String
  gameId     String
  answeredAt DateTime   @default(now())
  isCorrect  Boolean
  totalAns   Int?
  game       GameData   @relation(fields: [gameId], references: [id])
  user       Credential @relation(fields: [userId], references: [id])
}

model Quest {
  id          String      @id @default(uuid())
  title       String
  description String
  xpReward    Int         @default(0)
  type        QuestType   @default(DAILY)
  createdAt   DateTime    @default(now())
  ayahId      Int?
  surahId     Int?
  targetCount Int?
  targetJuz   Int?
  targetSurah Int?
  ayah        Ayah?       @relation(fields: [ayahId], references: [id])
  surah       Surah?      @relation(fields: [surahId], references: [id])
  userQuests  UserQuest[]
}

model UserQuest {
  id          String      @id @default(uuid())
  userId      String
  questId     String
  status      QuestStatus @default(IN_PROGRESS)
  assignedAt  DateTime    @default(now())
  completedAt DateTime?
  quest       Quest       @relation(fields: [questId], references: [id])
  user        Credential  @relation(fields: [userId], references: [id])

  @@unique([userId, questId])
}

enum QuestType {
  DAILY
  WEEKLY
}

enum QuestStatus {
  IN_PROGRESS
  COMPLETED
}
